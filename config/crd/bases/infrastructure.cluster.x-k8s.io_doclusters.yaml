
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: doclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: DOCluster
    listKind: DOClusterList
    plural: doclusters
    singular: docluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this DOCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Cluster infrastructure is ready for DigitalOcean droplet instances
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: API Endpoint
      jsonPath: .spec.ControlPlaneEndpoint
      name: Endpoint
      priority: 1
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: DOCluster is the Schema for the DOClusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DOClusterSpec defines the desired state of DOCluster.
            properties:
              controlPlaneDNS:
                description: ControlPlaneDNS is a managed DNS name that points to
                  the load-balancer IP used for the ControlPlaneEndpoint.
                properties:
                  domain:
                    description: Domain is the DO domain that this record should live
                      in. It must be pre-existing in your DO account. The format must
                      be a string that conforms to the definition of a subdomain in
                      DNS (RFC 1123)
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  name:
                    description: Name is the DNS short name of the record (non-FQDN)
                      The format must consist of alphanumeric characters, '-' or '.',
                      and must start and end with an alphanumeric character
                    pattern: ^[a-z0-9]([-a-z0-9.]*[a-z0-9])?$
                    type: string
                required:
                - domain
                - name
                type: object
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane. If ControlPlaneDNS is unset,
                  the DO load-balancer IP of the Kubernetes API Server is used.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              network:
                description: Network configurations
                properties:
                  apiServerLoadbalancers:
                    description: Configures an API Server loadbalancers
                    properties:
                      algorithm:
                        description: The API Server load balancing algorithm used
                          to determine which backend Droplet will be selected by a
                          client. It must be either "round_robin" or "least_connections".
                          The default value is "round_robin".
                        enum:
                        - round_robin
                        - least_connections
                        type: string
                      healthCheck:
                        description: An object specifying health check settings for
                          the Load Balancer. If omitted, default values will be provided.
                        properties:
                          healthyThreshold:
                            description: The number of times a health check must pass
                              for a backend Droplet to be marked "healthy" and be
                              re-added to the pool. The vaule must be between 2 and
                              10. If not specified, the default value is 5.
                            maximum: 10
                            minimum: 2
                            type: integer
                          interval:
                            description: The number of seconds between between two
                              consecutive health checks. The value must be between
                              3 and 300. If not specified, the default value is 10.
                            maximum: 300
                            minimum: 3
                            type: integer
                          timeout:
                            description: The number of seconds the Load Balancer instance
                              will wait for a response until marking a health check
                              as failed. The value must be between 3 and 300. If not
                              specified, the default value is 5.
                            maximum: 300
                            minimum: 3
                            type: integer
                          unhealthyThreshold:
                            description: The number of times a health check must fail
                              for a backend Droplet to be marked "unhealthy" and be
                              removed from the pool. The vaule must be between 2 and
                              10. If not specified, the default value is 3.
                            maximum: 10
                            minimum: 2
                            type: integer
                        type: object
                      port:
                        description: API Server port. It must be valid ports range
                          (1-65535). If omitted, default value is 6443.
                        maximum: 65535
                        minimum: 1
                        type: integer
                      resourceId:
                        description: The DO load balancer UUID. If omitted, a new
                          load balancer will be created.
                        type: string
                    type: object
                  vpc:
                    description: VPC defines the VPC configuration.
                    properties:
                      vpc_uuid:
                        description: VPCUUID defines the VPC UUID to use. An empty
                          value implies using the default VPC.
                        type: string
                    type: object
                type: object
              region:
                description: The DigitalOcean Region the cluster lives in. It must
                  be one of available region on DigitalOcean. See https://developers.digitalocean.com/documentation/v2/#list-all-regions
                type: string
            required:
            - region
            type: object
          status:
            description: DOClusterStatus defines the observed state of DOCluster.
            properties:
              controlPlaneDNSRecordReady:
                description: ControlPlaneDNSRecordReady denotes that the DNS record
                  is ready and propagated to the DO DNS servers.
                type: boolean
              network:
                description: Network encapsulates all things related to DigitalOcean
                  network.
                properties:
                  apiServerLoadbalancersRef:
                    description: APIServerLoadbalancersRef is the id of apiserver
                      loadbalancers.
                    properties:
                      resourceId:
                        description: ID of DigitalOcean resource
                        type: string
                      resourceStatus:
                        description: Status of DigitalOcean resource
                        type: string
                    type: object
                type: object
              ready:
                description: Ready denotes that the cluster (infrastructure) is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Cluster to which this DOCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Cluster infrastructure is ready for DigitalOcean droplet instances
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: API Endpoint
      jsonPath: .spec.ControlPlaneEndpoint
      name: Endpoint
      priority: 1
      type: string
    name: v1alpha4
    schema:
      openAPIV3Schema:
        description: DOCluster is the Schema for the DOClusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DOClusterSpec defines the desired state of DOCluster.
            properties:
              controlPlaneDNS:
                description: ControlPlaneDNS is a managed DNS name that points to
                  the load-balancer IP used for the ControlPlaneEndpoint.
                properties:
                  domain:
                    description: Domain is the DO domain that this record should live
                      in. It must be pre-existing in your DO account. The format must
                      be a string that conforms to the definition of a subdomain in
                      DNS (RFC 1123)
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  name:
                    description: Name is the DNS short name of the record (non-FQDN)
                      The format must consist of alphanumeric characters, '-' or '.',
                      and must start and end with an alphanumeric character
                    pattern: ^[a-z0-9]([-a-z0-9.]*[a-z0-9])?$
                    type: string
                required:
                - domain
                - name
                type: object
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane. If ControlPlaneDNS is unset,
                  the DO load-balancer IP of the Kubernetes API Server is used.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              network:
                description: Network configurations
                properties:
                  apiServerLoadbalancers:
                    description: Configures an API Server loadbalancers
                    properties:
                      algorithm:
                        description: The API Server load balancing algorithm used
                          to determine which backend Droplet will be selected by a
                          client. It must be either "round_robin" or "least_connections".
                          The default value is "round_robin".
                        enum:
                        - round_robin
                        - least_connections
                        type: string
                      healthCheck:
                        description: An object specifying health check settings for
                          the Load Balancer. If omitted, default values will be provided.
                        properties:
                          healthyThreshold:
                            description: The number of times a health check must pass
                              for a backend Droplet to be marked "healthy" and be
                              re-added to the pool. The vaule must be between 2 and
                              10. If not specified, the default value is 5.
                            maximum: 10
                            minimum: 2
                            type: integer
                          interval:
                            description: The number of seconds between between two
                              consecutive health checks. The value must be between
                              3 and 300. If not specified, the default value is 10.
                            maximum: 300
                            minimum: 3
                            type: integer
                          timeout:
                            description: The number of seconds the Load Balancer instance
                              will wait for a response until marking a health check
                              as failed. The value must be between 3 and 300. If not
                              specified, the default value is 5.
                            maximum: 300
                            minimum: 3
                            type: integer
                          unhealthyThreshold:
                            description: The number of times a health check must fail
                              for a backend Droplet to be marked "unhealthy" and be
                              removed from the pool. The vaule must be between 2 and
                              10. If not specified, the default value is 3.
                            maximum: 10
                            minimum: 2
                            type: integer
                        type: object
                      port:
                        description: API Server port. It must be valid ports range
                          (1-65535). If omitted, default value is 6443.
                        maximum: 65535
                        minimum: 1
                        type: integer
                      resourceId:
                        description: The DO load balancer UUID. If omitted, a new
                          load balancer will be created.
                        type: string
                    type: object
                  vpc:
                    description: VPC defines the VPC configuration.
                    properties:
                      vpc_uuid:
                        description: VPCUUID defines the VPC UUID to use. An empty
                          value implies using the default VPC.
                        type: string
                    type: object
                type: object
              region:
                description: The DigitalOcean Region the cluster lives in. It must
                  be one of available region on DigitalOcean. See https://developers.digitalocean.com/documentation/v2/#list-all-regions
                type: string
            required:
            - region
            type: object
          status:
            description: DOClusterStatus defines the observed state of DOCluster.
            properties:
              controlPlaneDNSRecordReady:
                description: ControlPlaneDNSRecordReady denotes that the DNS record
                  is ready and propagated to the DO DNS servers.
                type: boolean
              network:
                description: Network encapsulates all things related to DigitalOcean
                  network.
                properties:
                  apiServerLoadbalancersRef:
                    description: APIServerLoadbalancersRef is the id of apiserver
                      loadbalancers.
                    properties:
                      resourceId:
                        description: ID of DigitalOcean resource
                        type: string
                      resourceStatus:
                        description: Status of DigitalOcean resource
                        type: string
                    type: object
                type: object
              ready:
                description: Ready denotes that the cluster (infrastructure) is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Cluster to which this DOCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Cluster infrastructure is ready for DigitalOcean droplet instances
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: API Endpoint
      jsonPath: .spec.ControlPlaneEndpoint
      name: Endpoint
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: DOCluster is the Schema for the DOClusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DOClusterSpec defines the desired state of DOCluster.
            properties:
              controlPlaneDNS:
                description: ControlPlaneDNS is a managed DNS name that points to
                  the load-balancer IP used for the ControlPlaneEndpoint.
                properties:
                  domain:
                    description: Domain is the DO domain that this record should live
                      in. It must be pre-existing in your DO account. The format must
                      be a string that conforms to the definition of a subdomain in
                      DNS (RFC 1123)
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  name:
                    description: Name is the DNS short name of the record (non-FQDN)
                      The format must consist of alphanumeric characters, '-' or '.',
                      and must start and end with an alphanumeric character
                    pattern: ^[a-z0-9]([-a-z0-9.]*[a-z0-9])?$
                    type: string
                required:
                - domain
                - name
                type: object
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane. If ControlPlaneDNS is unset,
                  the DO load-balancer IP of the Kubernetes API Server is used.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              network:
                description: Network configurations
                properties:
                  apiServerLoadbalancers:
                    description: Configures an API Server loadbalancers
                    properties:
                      algorithm:
                        description: The API Server load balancing algorithm used
                          to determine which backend Droplet will be selected by a
                          client. It must be either "round_robin" or "least_connections".
                          The default value is "round_robin".
                        enum:
                        - round_robin
                        - least_connections
                        type: string
                      healthCheck:
                        description: An object specifying health check settings for
                          the Load Balancer. If omitted, default values will be provided.
                        properties:
                          healthyThreshold:
                            description: The number of times a health check must pass
                              for a backend Droplet to be marked "healthy" and be
                              re-added to the pool. The vaule must be between 2 and
                              10. If not specified, the default value is 5.
                            maximum: 10
                            minimum: 2
                            type: integer
                          interval:
                            description: The number of seconds between between two
                              consecutive health checks. The value must be between
                              3 and 300. If not specified, the default value is 10.
                            maximum: 300
                            minimum: 3
                            type: integer
                          timeout:
                            description: The number of seconds the Load Balancer instance
                              will wait for a response until marking a health check
                              as failed. The value must be between 3 and 300. If not
                              specified, the default value is 5.
                            maximum: 300
                            minimum: 3
                            type: integer
                          unhealthyThreshold:
                            description: The number of times a health check must fail
                              for a backend Droplet to be marked "unhealthy" and be
                              removed from the pool. The vaule must be between 2 and
                              10. If not specified, the default value is 3.
                            maximum: 10
                            minimum: 2
                            type: integer
                        type: object
                      port:
                        description: API Server port. It must be valid ports range
                          (1-65535). If omitted, default value is 6443.
                        maximum: 65535
                        minimum: 1
                        type: integer
                      resourceId:
                        description: The DO load balancer UUID. If omitted, a new
                          load balancer will be created.
                        type: string
                    type: object
                  vpc:
                    description: VPC defines the VPC configuration.
                    properties:
                      vpc_uuid:
                        description: VPCUUID defines the VPC UUID to use. An empty
                          value implies using the default VPC.
                        type: string
                    type: object
                type: object
              region:
                description: The DigitalOcean Region the cluster lives in. It must
                  be one of available region on DigitalOcean. See https://developers.digitalocean.com/documentation/v2/#list-all-regions
                type: string
            required:
            - region
            type: object
          status:
            description: DOClusterStatus defines the observed state of DOCluster.
            properties:
              controlPlaneDNSRecordReady:
                description: ControlPlaneDNSRecordReady denotes that the DNS record
                  is ready and propagated to the DO DNS servers.
                type: boolean
              network:
                description: Network encapsulates all things related to DigitalOcean
                  network.
                properties:
                  apiServerLoadbalancersRef:
                    description: APIServerLoadbalancersRef is the id of apiserver
                      loadbalancers.
                    properties:
                      resourceId:
                        description: ID of DigitalOcean resource
                        type: string
                      resourceStatus:
                        description: Status of DigitalOcean resource
                        type: string
                    type: object
                type: object
              ready:
                description: Ready denotes that the cluster (infrastructure) is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
